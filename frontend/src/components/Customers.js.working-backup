import React, { useState, useEffect } from "react";
import axios from "axios";

const Customers = () => {
  const [customers, setCustomers] = useState([]);
  const [selected, setSelected] = useState(null);
  const [ledger, setLedger] = useState([]);
  const [newCustomer, setNewCustomer] = useState({
    name: "",
    openingBalance: 0,
    balanceType: "Dr",
  });
  const [showForm, setShowForm] = useState(false);
  const [search, setSearch] = useState("");

  // fetch customers
  useEffect(() => {
    fetchCustomers();
  }, []);

  const fetchCustomers = async () => {
    try {
      const res = await axios.get("/api/customers");
      setCustomers(res.data);
    } catch (err) {
      console.error("Error fetching customers:", err);
    }
  };

  const fetchLedger = async (id) => {
    try {
      const res = await axios.get(`/api/customers/${id}/ledger`);
      setLedger(res.data);
    } catch (err) {
      console.error("Error fetching ledger:", err);
    }
  };

  const handleSelect = (cust) => {
    setSelected(cust);
    fetchLedger(cust.id);
  };

  const handleAddCustomer = async () => {
    try {
      await axios.post("/api/customers", newCustomer);
      fetchCustomers();
      setShowForm(false);
      setNewCustomer({ name: "", openingBalance: 0, balanceType: "Dr" });
    } catch (err) {
      console.error("Error adding customer:", err);
    }
  };

  // âœ… helper function for rendering ledger
  const renderLedger = () => {
    if (!selected) return null;

    let runningBalance =
      selected.balanceType === "Dr"
        ? parseFloat(selected.openingBalance)
        : -parseFloat(selected.openingBalance);

    return (
      <div
        style={{
          marginTop: 20,
          padding: 20,
          background: "#f8f9fa",
          borderRadius: 8,
          border: "1px solid #dee2e6",
        }}
      >
        <h3 style={{ marginTop: 0, marginBottom: 16, color: "#2980b9" }}>
          Ledger for {selected.name}
        </h3>
        <table
          style={{
            width: "100%",
            borderCollapse: "collapse",
            background: "white",
            boxShadow: "0 1px 3px rgba(0,0,0,0.1)",
          }}
        >
          <thead style={{ background: "#f1f3f5" }}>
            <tr>
              <th style={th}>Date</th>
              <th style={th}>Description</th>
              <th style={th}>Debit</th>
              <th style={th}>Credit</th>
              <th style={th}>Balance</th>
            </tr>
          </thead>
          <tbody>
            {/* Opening Balance */}
            <tr>
              <td style={td}></td>
              <td style={td}>Opening Balance</td>
              <td style={td}>
                {selected.balanceType === "Dr"
                  ? selected.openingBalance
                  : "-"}
              </td>
              <td style={td}>
                {selected.balanceType === "Cr"
                  ? selected.openingBalance
                  : "-"}
              </td>
              <td style={td}>
                {Math.abs(runningBalance)}{" "}
                {runningBalance >= 0 ? "Dr" : "Cr"}
              </td>
            </tr>

            {/* Transactions */}
            {ledger.map((entry, idx) => {
              if (entry.type === "Dr") {
                runningBalance += parseFloat(entry.amount);
              } else {
                runningBalance -= parseFloat(entry.amount);
              }

              return (
                <tr key={idx}>
                  <td style={td}>{entry.date}</td>
                  <td style={td}>{entry.description}</td>
                  <td style={{ ...td, color: "red" }}>
                    {entry.type === "Dr" ? entry.amount : "-"}
                  </td>
                  <td style={{ ...td, color: "black" }}>
                    {entry.type === "Cr" ? entry.amount : "-"}
                  </td>
                  <td style={td}>
                    {Math.abs(runningBalance)}{" "}
                    {runningBalance >= 0 ? "Dr" : "Cr"}
                  </td>
                </tr>
              );
            })}
          </tbody>
        </table>

        <h4 style={{ marginTop: 16, color: "#27ae60" }}>
          Closing Balance: {Math.abs(runningBalance)}{" "}
          {runningBalance >= 0 ? "Dr" : "Cr"}
        </h4>
      </div>
    );
  };

  return (
    <div style={{ maxWidth: 1200, margin: "0 auto", padding: 20 }}>
      <h2 style={{ textAlign: "center", color: "#2c3e50" }}>
        Customers Ledger
      </h2>

      {/* Search */}
      <input
        type="text"
        placeholder="Search customer..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        style={{
          padding: 10,
          width: "100%",
          maxWidth: 400,
          margin: "10px auto",
          display: "block",
          border: "1px solid #ccc",
          borderRadius: 6,
        }}
      />

      {/* Customers List */}
      <ul style={{ listStyle: "none", padding: 0 }}>
        {customers
          .filter((c) =>
            c.name.toLowerCase().includes(search.toLowerCase())
          )
          .map((c) => (
            <li
              key={c.id}
              onClick={() => handleSelect(c)}
              style={{
                padding: 10,
                margin: "6px 0",
                background:
                  selected && selected.id === c.id
                    ? "#d1e7dd"
                    : "#f8f9fa",
                cursor: "pointer",
                borderRadius: 6,
              }}
            >
              {c.name}
            </li>
          ))}
      </ul>

      {/* Add New Customer Button */}
      <button
        onClick={() => setShowForm(true)}
        style={{
          marginTop: 15,
          padding: "10px 15px",
          background: "#2980b9",
          color: "white",
          border: "none",
          borderRadius: 6,
          cursor: "pointer",
        }}
      >
        + Add Customer
      </button>

      {/* Ledger */}
      {renderLedger()}

      {/* Add Customer Form Modal */}
      {showForm && (
        <div
          style={{
            position: "fixed",
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: "rgba(0,0,0,0.5)",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <div
            style={{
              background: "white",
              padding: 20,
              borderRadius: 8,
              width: 400,
            }}
          >
            <h3>Add New Customer</h3>
            <input
              type="text"
              placeholder="Customer Name"
              value={newCustomer.name}
              onChange={(e) =>
                setNewCustomer({
                  ...newCustomer,
                  name: e.target.value,
                })
              }
              style={input}
            />
            <input
              type="number"
              placeholder="Opening Balance"
              value={newCustomer.openingBalance}
              onChange={(e) =>
                setNewCustomer({
                  ...newCustomer,
                  openingBalance: e.target.value,
                })
              }
              style={input}
            />
            <select
              value={newCustomer.balanceType}
              onChange={(e) =>
                setNewCustomer({
                  ...newCustomer,
                  balanceType: e.target.value,
                })
              }
              style={input}
            >
              <option value="Dr">Debit</option>
              <option value="Cr">Credit</option>
            </select>
            <button
              onClick={handleAddCustomer}
              style={{
                ...btn,
                background: "#27ae60",
              }}
            >
              Save
            </button>
            <button
              onClick={() => setShowForm(false)}
              style={{
                ...btn,
                background: "#c0392b",
              }}
            >
              Cancel
            </button>
          </div>
        </div>
      )}
    </div>
  );
};

// styles
const th = {
  border: "1px solid #dee2e6",
  padding: "8px 12px",
  textAlign: "left",
};
const td = {
  border: "1px solid #dee2e6",
  padding: "8px 12px",
};
const input = {
  width: "100%",
  padding: 8,
  margin: "8px 0",
  borderRadius: 6,
  border: "1px solid #ccc",
};
const btn = {
  padding: "10px 15px",
  color: "white",
  border: "none",
  borderRadius: 6,
  cursor: "pointer",
  marginRight: 10,
};

export default Customers;